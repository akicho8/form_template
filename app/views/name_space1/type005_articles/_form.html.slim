/ コメント未入力エラー時でもアップした一時ファイル情報を保持する
/ = form.fields_for(:type005_files) do |f|
/   = f.hidden_field(:pixer_cache)

/ タイトル
.form-group
  = form.label(:title, :class => "col-sm-2 control-label")
  .col-sm-10
    = form.text_field(:title, :class => "form-control")

/ ファイル
.form-group
  = form.label(:up_files, :class => "col-sm-2 control-label")
  .col-sm-10
    / フォームを multipart にするための裏技
    = form.file_field("__dummy_file_field__", :disabled => true, :style => "display:none")
    / トップレベルで定義
    = file_field_tag("up_files[]", :class => "form-control", :multiple => true)
    - if form.object.type005_files.present?
      .help-block
        / 既存ファイルたち
        - if form.object.persisted_type005_files.present?
          = "既存のアップロードファイル"
          ul.list-unstyled
            - form.object.persisted_type005_files.each do |e|
              li
                = image_tag(e.pixer.url, :height => "128", :class => "img-rounded")
                label.checkbox-inline= check_box_tag("delete_ids[]", e.id, controller.current_delete_ids.include?(e.id)) + "削除する"

        / 今UPしたファイルたち
        - if form.object.temp_type005_files.present?
          = "今アップロードしたファイル"
          ul.list-unstyled
            - form.object.temp_type005_files.each do |e|
              li
                = hidden_field_tag("up_caches[]", e.pixer_cache)
                = image_tag(e.pixer.url, :height => "128", :class => "img-rounded")
                label.checkbox-inline= check_box_tag("reject_codes[]", e.pixer_cache, controller.current_reject_codes.include?(e.pixer_cache)) + "削除する"

/ 削除
- if form.object.type005_files.present?
  .form-group
    = form.label(:type005_files_all_remove, :class => "col-sm-2 control-label")
    .col-sm-10
      label.checkbox-inline
        = form.check_box(:type005_files_all_remove) + "削除する"
