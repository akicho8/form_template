/ http://www.htmq.com/dnd/

#app
  // 移動できる物
  span#id_a.label.label-default draggable="true" ondragstart="f_dragstart(event)" = "A"
  span#id_b.label.label-default draggable="true" ondragstart="f_dragstart(event)" = "B"

  // 移動の箱。いくらでも増やせる
  .panel.panel-default
    .panel-body ondragover="f_dragover(event)" ondrop="f_drop(event)"
  .panel.panel-default
    .panel-body ondragover="f_dragover(event)" ondrop="f_drop(event)"

javascript:
   // ドラッグ開始時の処理
   function f_dragstart(event){
     // ドラッグするデータのid名(なんでもいい)をDataTransferオブジェクトにセット
     event.dataTransfer.setData("target_id", event.target.id);
   }

   // ドラッグ要素がドロップ要素に重なっている間の処理
   function f_dragover(event){
     event.preventDefault(); // dragoverイベントをキャンセルしてドロップ先の要素がドロップを受け付けるようにする
   }

   /***** ドロップ時の処理 *****/
   function f_drop(event){
     var target_id = event.dataTransfer.getData("target_id");   // ドラッグされたデータのid名をDataTransferオブジェクトから取得
     var drag_elem = document.getElementById(target_id);  // id名からドラッグされた要素を取得
     event.currentTarget.appendChild(drag_elem);        // ドロップ先にドラッグされた要素を追加(ここらへんは自力でやるっぽい)
     event.preventDefault();                            // エラー回避のため、ドロップ処理の最後にdropイベントをキャンセルしておく
   }

sass:
  .obj
    margin: 0.5em
    display: inline-block
    border: 1px solid #aaa
